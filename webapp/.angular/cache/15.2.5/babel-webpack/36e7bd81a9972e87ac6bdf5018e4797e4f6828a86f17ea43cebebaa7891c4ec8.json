{"ast":null,"code":"import '@google/model-viewer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.service\";\nimport * as i2 from \"@google/model-viewer\";\nimport * as i3 from \"@angular/common\";\nfunction AppComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 7)(1, \"div\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"slot\", \"hotspot-\" + i_r2)(\"data-position\", ctx_r0.position(item_r1))(\"data-normal\", ctx_r0.normal(item_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.address);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(service, viewer) {\n      this.service = service;\n      this.viewer = viewer;\n      this.data = [];\n    }\n    position(item) {\n      var c = toCartesian(item.location);\n      return 500 * c.x + \" \" + 500 * c.y + \" \" + 500 * c.z;\n    }\n    normal(item) {\n      var c = toCartesian(item.location);\n      return c.x + \" \" + c.y + \" \" + c.z;\n    }\n    ngOnInit() {\n      this.service.getLocations().subscribe(res => {\n        this.data = res.list;\n        console.log(this.viewer.cameraOrbit);\n        console.log(this.viewer.slot);\n      });\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AppService), i0.ɵɵdirectiveInject(i2.ModelViewerElement));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"viewer-container\"], [\"id\", \"mv\", \"alt\", \"Failed to load model\", \"src\", \"./assets/Earth_1_12756.glb\", \"background-color\", \"black\", \"shadow-intensity\", \"0\", \"camera-controls\", \"\", \"touch-action\", \"pan-y\", \"disable-pan\", \"\", \"disable-tap\", \"\", \"interaction-prompt\", \"none\", 1, \"viewer\"], [\"class\", \"hotspot\", 4, \"ngFor\", \"ngForOf\"], [1, \"ui-container\"], [\"id\", \"debug1\"], [\"id\", \"debug2\"], [\"id\", \"debug3\"], [1, \"hotspot\"], [1, \"annotation\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"model-viewer\", 1);\n        i0.ɵɵtemplate(2, AppComponent_button_2_Template, 3, 4, \"button\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"p\", 4)(5, \"p\", 5)(6, \"p\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\".viewer[_ngcontent-%COMP%]{width:100%;height:100%}.viewer-container[_ngcontent-%COMP%]{z-index:0;display:block;position:fixed;left:0;top:0;width:100%;height:100%;margin:0 auto;padding:0;background-color:#000}.hotspot[_ngcontent-%COMP%]{border:none}.ui-container[_ngcontent-%COMP%]{left:10px;top:10px;position:relative;z-index:10}\"]\n  });\n  return AppComponent;\n})();\nfunction rad(n) {\n  return n * Math.PI / 180;\n}\nfunction toCartesian(c) {\n  return {\n    x: Math.cos(rad(c.lat)) * Math.cos(rad(-c.lon - 90)),\n    y: Math.sin(rad(c.lat)),\n    z: Math.cos(rad(c.lat)) * Math.sin(rad(-c.lon - 90))\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}