{"ast":null,"code":"import { decorateProperty as e } from \"./base.js\";\nimport { queryAssignedElements as t } from \"./query-assigned-elements.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction o(o, n, r) {\n  let l,\n    s = o;\n  return \"object\" == typeof o ? (s = o.slot, l = o) : l = {\n    flatten: n\n  }, r ? t({\n    slot: s,\n    flatten: n,\n    selector: r\n  }) : e({\n    descriptor: e => ({\n      get() {\n        var e, t;\n        const o = \"slot\" + (s ? `[name=${s}]` : \":not([name])\"),\n          n = null === (e = this.renderRoot) || void 0 === e ? void 0 : e.querySelector(o);\n        return null !== (t = null == n ? void 0 : n.assignedNodes(l)) && void 0 !== t ? t : [];\n      },\n      enumerable: !0,\n      configurable: !0\n    })\n  });\n}\nexport { o as queryAssignedNodes };\n//# sourceMappingURL=query-assigned-nodes.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}